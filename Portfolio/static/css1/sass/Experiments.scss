$bgTop:#ff4444;//#af0000;
$bgBottom:#430008;//#ff6666;//#ff6666;

$titleColor:#fff;
$descriptionFontColor:#696969;
$descriptionBG:#fff;
$BorderRadius:0.3em;
$captionBG:#fff;
$captionTag:#AD0000;
$captionTitle:#AD0000;
$buttonFontColor:#fff;
$projectWidth:14vw;
#Experiments{
	@include background-image(linear-gradient(top, $bgTop, $bgBottom));
	.row{
		margin:auto;
		
		text-align: center;
		h1{
			font-size:2.5em;
			color:$titleColor;
			margin:0% 0 3% 5%;
		}
		h3{
			color:$titleColor;
		}
	}	
}
.projectWrapper{
	background:transparent;
	width:100%;
	margin:auto;
	text-align:center;
	margin-top:3%;
}
.projects{
	float:left;
	position:relative;
	min-width:160px;
	max-width:228px;
	width:$projectWidth;
	margin:15% 0 2% 3%;
	//if there are elements other than .projects, than the nth-child not working correctly.
	&:nth-child(1){
		margin-left:5%;
	}
	&:nth-child(2n){
		margin-top:11%;
	}
	&:nth-child(3){
		margin-top:4%;
	}
	.description{
		// set the perspective on the parent element
		// so its child element can have different perspective on 3d transform animation!
		box-shadow: 1px #f2f2f2;
		position:relative;
		width:$projectWidth;
		height:$projectWidth;
		max-width:228px;
		min-width:160px;
		min-height:160px;
		background-size: 100%;
		@include perspective(600px);
		@include border-radius-part(top-left, $BorderRadius);
		@include border-radius-part(top-right, $BorderRadius);
		@include box-sizing(border-box);
		.proShelter{
			// if use position relative, .proShelter will take place,
			// so the description will be below the proShelter, not under it and covered by it.
			position:absolute;
			width:100%;
			height:50%;
			background-position: 5% 5%; // sequence: left top
			z-index:1;
			overflow: hidden;
			& img{
				//max/min-width to make the img zoom within the right container
				max-width: 100%;
				min-width: 100%;
			}
		}
		.descrpt{
			//If you are trying to hide absolute positioned elements 
			//make sure the container of those absolute positioned elements 
			//is relatively positioned.
			// it also work the opposite way--container: absolute, child: relative
			position:absolute;
			overflow: hidden;
			height:50%;
			width:100%;
			background:$descriptionBG;
			color:$descriptionFontColor;
			opacity: 0.9;
			text-align: center;
			& p{
				margin-left:0.5em;
				margin-right:0.5em;
				margin-top: 2em;
				line-height:1.2em;
				font-size: 0.9em;
			}
		}	
		.top, .top img{
			@include border-radius-part(top-left, $BorderRadius);
			@include border-radius-part(top-right, $BorderRadius); 
		}
		.down{
			top:50%;
			@include border-radius-part(bottom-left, $BorderRadius);
			@include border-radius-part(bottom-right, $BorderRadius); 
			& img{
				position:relative;
				top:-100%;
				@include border-radius-part(bottom-left, $BorderRadius);
				@include border-radius-part(bottom-right, $BorderRadius); 
			}
			& p{
				position:relative;
				top:-100%;
			}
		}
		.in_top, .in_right{
			@include transform-origin(50%, 100%, 0 );
			@include animation('pro_in_top 0.5s forwards');
		}
		
		.in_bottom, .in_left{
			@include transform-origin(50%, 0, 0 );
			@include animation('pro_in_bottom 0.5s forwards');
		}
		.out_top, .out_right{
			@include transform(rotateX(90deg));
			@include transform-origin(50%, 100%, 0 );
			@include animation('pro_out_top 0.5s 0.3s forwards');
		}
		.out_bottom, .out_left{
			@include transform(rotateX(90deg));
			@include transform-origin(50%,0, 0 );
			@include animation('pro_out_bottom 0.5s 0.3s forwards');
		}
		.rotate_in_bottom, .rotate_in_left{
			@include transform(rotateX(-90deg));
			z-index: 1;
			opacity: 0;
			@include transform-origin(50%, 100%, 0 );
			@include animation('rotate_in_bottom 0.5s 0.3s forwards');
		}
		.rotate_in_top, .rotate_in_right{
			z-index: 1;
			opacity: 0;
			@include transform-origin(50%, 0, 0 );
			@include transform(rotateX(90deg));
			@include animation('rotate_in_top 0.5s 0.3s forwards');
		}
		.rotate_out_top, .rotate_out_right{
			z-index: 1;
			@include transform-origin(50%, 0, 0 );
			@include animation('rotate_out_top 0.5s forwards');
		}
		.rotate_out_bottom, .rotate_out_left{
			z-index: 1;
			@include transform-origin(50%, 100%, 0 );
			@include animation('rotate_out_bottom 0.5s  forwards');
		}
	}
	.caption{
			@include box-sizing(border-box);
			@include border-radius-part(bottom-left, 0.3em);
			@include border-radius-part(bottom-right, 0.3em);
			padding:5% 2% 0 2%;
			width:100%;
			height:8vh;
			min-width:160px;
			max-width:228px;
			min-height:45px;
			max-height: 50px;
			background:$captionBG;
			text-align: center;
			text-overflow: ellipsis;
			white-space: nowrap;
			& h3{
				color:$captionTitle;
				font-size: 0.7em;
				line-height: 2em;
			}
			& p{
				color:$captionTag;
				font-size:0.6em;
			}
	}
}
.buttonWrap{
	position:absolute;
	left:0;
	bottom:5em;
	width:100%;
	@include perspective(400px);
	float:right;
	& .load{
		width:50%;
		margin:auto;
		color:$buttonFontColor;
	}
}
.rotateY{
		@include transform-origin(50%,50%,0);
		@include animation('rotateY 1.5s forwards');
}

@media screen and (max-width:80em){// 1280px / 16 = 
	.projects{
		.caption{
			& h3{
				font-size: 0.6em;
			}
			& p{
				font-size: 0.5em;
			}
		}
		.caption{
			height:4vh;
		}
	}
}
@media screen and (max-width:1070px){ // 1070px /16 = 66.875
	.projectWrapper{
		margin-right: auto;
		margin-left: auto;
	}
	$projectWidth:22vw;
	.projects{
		width:$projectWidth;
		&:nth-child(n){
			margin:40px 0 30px 38px;
		}
		&:nth-child(4){
			///margin-left:5%;
			display: inline-block;
		}
		.description{
			width:$projectWidth;
			height:$projectWidth;
		}
		.caption{
			width:$projectWidth;
		}
	}
}
@media screen and (max-width:41.25em){// 660px /16 = 41.875em
	.projects{
		margin-left: 0;
		&:nth-child(2n){
			float:right;
			margin-right:38px;
		}
	}
	#Experiments .row h1{
		font-size: 2em;
	}
}
@media screen and (max-width:31.25em){// 500px /16 = 

$projectWidth:45vw;
	.projectWrapper{
		//the height of parent will change based on children element;
		display:table !important;
	}
	.projects{
		width:$projectWidth;
		&:nth-child(n){
			display: block;
			position:relative;
			float:none;
			margin-left:auto;
			margin-right:auto;
		}
		.description{
			width:$projectWidth;
			height:$projectWidth;
		}
		.caption{
			width:$projectWidth;
		}
		
	}
}
